--------
add client certs generation for mTLS
improve this ^
so far generates for only 1 client (hardcoded client1.* files)
--------
add CRLs generation:
# Generate CA
openssl genrsa -out ca.key 2048
openssl req -x509 -new -nodes -key ca.key -sha256 -days 365 -out ca.crt \
    -subj "/C=US/ST=State/L=City/O=SpacetimeDB/CN=SpacetimeCA"
# Generate server certificate
openssl genrsa -out server.key 2048
openssl req -new -key server.key -out server.csr \
    -subj "/C=US/ST=State/L=City/O=SpacetimeDB/CN=server.spacetimedb"
openssl x509 -req -in server.csr -CA ca.crt -CAkey ca.key -CAcreateserial \
    -out server.crt -days 365 -sha256
# Generate client certificate
openssl genrsa -out client.key 2048
openssl req -new -key client.key -out client.csr \
    -subj "/C=US/ST=State/L=City/O=SpacetimeDB/CN=client.spacetimedb"
openssl x509 -req -in client.csr -CA ca.crt -CAkey ca.key -CAcreateserial \
    -out client.crt -days 365 -sha256
# Initialize CA database
touch index.txt
echo 01 > crlnumber
cat > ca.cnf << EOF
[ ca ]
default_ca = CA_default
[ CA_default ]
dir = .
database = index.txt
crlnumber = crlnumber
default_crl_days = 30
default_md = sha256
[ crl_ext ]
authorityKeyIdentifier=keyid:always
EOF
----------
