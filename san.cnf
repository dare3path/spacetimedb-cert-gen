#this is server's config file in order to can add Subject Alternative Name(s)
#If you want the server cert to work with multiple names (e.g., localhost, 127.0.0.1), create a config file san.cnf:

[req]
distinguished_name = arbitrarily_named_1
#If -sha256 wasn't specified on cmdline, it will be used anyway:
default_md = sha256
# In the [req] section of an OpenSSL config (e.g., san.cnf or client.cnf), req_extensions specifies the name of a section containing extensions to include in the certificate request (CSR) or certificate.
req_extensions = arbitrary_name_2
# Disable interactive prompts, else to not prompt you it needs arg: -subj "/CN=localhost"
prompt = no

[arbitrarily_named_1]
CN = localhost
# can comment out the following:
## Optional: Add more DN fields if needed (can leave blank with .)
## Country code (blank) - nah, blank is not accepted as per: openssl req -new -key server.key -out server.csr -config san.cnf
##Error making certificate request
##805B2975357C0000:error:06800098:asn1 encoding routines:ASN1_mbstring_ncopy:string too short:crypto/asn1/a_mbstr.c:100:minsize=2
#C = US
## State (blank)
#ST = state
## Locality (blank)
#L = locality
## Organization (blank)
#O = organization
## Organizational Unit (blank)
#OU = org unit
OU = localhost server

[arbitrary_name_2]
#These extensions (e.g., Subject Alternative Names) are applied when generating a CSR (openssl req -new) or certificate (openssl req -x509).
#subjectAltName = DNS:localhost,IP:127.0.0.1,IP:127.1.2.3
subjectAltName = @alt_names_arbitrarilynamed

[alt_names_arbitrarilynamed]
DNS.1 = localhost
IP.1 = 127.0.0.1
IP.2 = 127.1.2.3

